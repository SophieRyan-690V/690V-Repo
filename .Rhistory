ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$age, response = my_sample_200$color,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$age,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$sociable,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$control,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$control,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$sociable,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$sociable,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$control,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 30000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 300000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$anxiety, response = my_sample_200$depression,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$age, response = my_sample_200$depression,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$depression,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$control,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$college,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$memory,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$memory,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$island, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$politics, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$income,
ci.fun = ciMean, ylim = c(0, 100000))
make.my.sample(32669094, 200, aliens)
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$sociable,
ci.fun = ciMean, ylim = c(0, 150))
my_sample_200 <- make.my.sample(32669094, 200, aliens)
bargraph.CI(x.factor = my_sample_200$college, response = my_sample_200$sociable,
ci.fun = ciMean, ylim = c(0, 150))
knitr::opts_chunk$set(echo = TRUE)
x.var <- seq(0, 60, 1)
probs <- dbinom(x.var, 60, .1667)
plot(x.var, probs, type = "h")
x.var <- seq(0, 60, 1)
probs <- dbinom(x.var, 60, .1667)
plot(x.var, probs, type = "h", xlab = "asparagus smeller")
x.var <- seq(0, 60, 1)
probs <- dbinom(x.var, 60, .5)
plot(x.var, probs, type = "h", xlab = "asparagus smeller")
qbinom(p = .05, 60, .5)
rbinom(n = 1, 60, .4)
rbinom(n = 100, 60, .4)
x.var <- seq(0, 180, 1)
probs <- dbinom(x.var, 180, .5)
plot(x.var, probs, type = "h", xlab = "asparagus smeller")
qbinom(p = .05, 180, .5)
rbinom(n = 100, 180, .4)
x.var <- seq(0, 60, 1)
probs <- dbinom(x.var, 60, .4)
plot(x.var, probs, type = "h", xlab = "asparagus smeller")
qbinom(p = .05, 60, .4)
rbinom(n = 1, 60, .4)
rbinom(n = 100, 60, .4)
knitr::opts_chunk$set(echo = TRUE)
boxplot(my_sample$sleep~my_sample$antennae, ylim = c(30, 70))
boxplot(my_sample$sleep~my_sample$antennae, ylim = c(0, 10))
boxplot(my_sample$sleep~my_sample$antennae, ylim = c(0, 10))
boxplot(my_sample$sleep~my_sample$color, ylim = c(0, 10))
boxplot(my_sample$sleep~my_sample$antennae, ylim = c(2, 10))
boxplot(my_sample$sleep~my_sample$color, ylim = c(0, 10))
boxplot(my_sample$sleep~my_sample$antennae, ylim = c(2, 10))
boxplot(my_sample$sleep~my_sample$color, ylim = c(2, 10))
boxplot(my_sample$antennae~my_sample$sleep, ylim = c(2, 10))
boxplot(my_sample$sleep~my_sample$antennae, ylim = c(2, 10))
boxplot(my_sample$sleep~my_sample$color, ylim = c(2, 10))
boxplot(my_sample$food1~my_sample$antennae, ylim = c(0, 10))
boxplot(my_sample$food1~my_sample$antennae, ylim = c(2, 15))
boxplot(my_sample$food1~my_sample$antennae, ylim = c(2, 15))
boxplot(my_sample$food1~my_sample$color, ylim = c(0, 10))
boxplot(my_sample$food1~my_sample$antennae, ylim = c(2, 15))
boxplot(my_sample$food1~my_sample$color, ylim = c(2, 15))
t.test(my_sample$sleep~my_sample$antennae, mu = 0)
t.test(my_sample$sleep~my_sample$color, mu = 0)
t.test(my_sample$food1~my_sample$antennae, mu = 0)
t.test(my_sample$food1~my_sample$color, mu = 0)
cohensD(my_sample$sleep~my_sample$antennae)
library(sciplot)
library(lsr)
cohensD(my_sample$sleep~my_sample$antennae)
cohensD(my_sample$sleep~my_sample$antennae)
cohensD(my_sample$sleep~my_sample$color)
cohensD(my_sample$food1~my_sample$antennae)
cohensD(my_sample$sleep~my_sample$antennae)
cohensD(my_sample$sleep~my_sample$color)
cohensD(my_sample$food1~my_sample$antennae)
cohensD(my_sample$food1~my_sample$color)
prob_type1 = 1 - .05
prob_type1 = 1 - .05
my_sample <- suppressWarnings(make.my.sample(32669094, 100, aliens))
boxplot(my_sample$sleep~my_sample$antennae, ylim = c(2, 10))
boxplot(my_sample$sleep~my_sample$color, ylim = c(2, 10))
boxplot(my_sample$food1~my_sample$antennae, ylim = c(2, 15))
boxplot(my_sample$food1~my_sample$color, ylim = c(2, 15))
t.test(my_sample$sleep~my_sample$antennae, mu = 0)
t.test(my_sample$sleep~my_sample$color, mu = 0)
t.test(my_sample$food1~my_sample$antennae, mu = 0)
t.test(my_sample$food1~my_sample$color, mu = 0)
cohensD(my_sample$sleep~my_sample$antennae)
cohensD(my_sample$sleep~my_sample$color)
cohensD(my_sample$food1~my_sample$antennae)
cohensD(my_sample$food1~my_sample$color)
my_sample2 <- suppressWarnings(make.my.sample(32669095, 100, aliens))
t.test(my_sample$sleep~my_sample$antennae, mu = 0)
t.test(my_sample$sleep~my_sample$color, mu = 0)
t.test(my_sample$food1~my_sample$antennae, mu = 0)
t.test(my_sample$food1~my_sample$color, mu = 0)
my_sample2 <- suppressWarnings(make.my.sample(326690941, 100, aliens))
t.test(my_sample2$sleep~my_sample$antennae, mu = 0)
t.test(my_sample2$sleep~my_sample$color, mu = 0)
t.test(my_sample2$food1~my_sample$antennae, mu = 0)
t.test(my_sample2$food1~my_sample$color, mu = 0)
my_sample2 <- suppressWarnings(make.my.sample(32669095, 100, aliens))
1 - .95*.95*.95*.95
1 - (.95*.95*.95*.95)
knitr::opts_chunk$set(echo = TRUE)
bargraph.CI(x.factor = my_sample$island, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 100), legend = T)
(x.factor = my_sample$island, response = my_sample$intelligence,
x.factor = my_sample$island, response = my_sample$intelligence,
x.factor = my_sample$island, response = my_sample$intelligence,
x.factor = my_sample$island, response = my_sample$intelligence,
x.factor = my_sample$intelligence, response = my_sample$island,
bargraph.CI(x.factor = my_sample$island, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 100), legend = T)
bargraph.CI(x.factor = my_sample$island, response = my_sample_200$intelligence,
ci.fun = ciMean, ylim = c(0, 150))
library(sciplot)
library(lsr)
bargraph.CI(x.factor = my_sample$island, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 100), legend = T)
bargraph.CI(x.factor = my_sample$island, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 200), legend = T)
bargraph.CI(x.factor = my_sample$island, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 150), legend = T)
bargraph.CI(x.factor = my_sample$island, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 150), legend = T)
bargraph.CI(x.factor = my_sample$college, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 150), legend = T)
View(foo)
cp.anova <- aov(my_sample$intelligence ~ my_sample$island)
summary(cp.anova)
cp.anova <- aov(my_sample$intelligence ~ my_sample$island)
summary(cp.anova)
cp.anova <- aov(my_sample$intelligence ~ my_sample$college)
summary(cp.anova)
bargraph.CI(x.factor = my_sample$food1, group = my_sample$color,
response = my_sample$antennae, ci.fun = ciMean, ylim = c(60, 160), legend = T)
bargraph.CI(x.factor = my_sample$color, group = my_sample$antennae,
response = my_sample$food1, ci.fun = ciMean, ylim = c(60, 160), legend = T)
bargraph.CI(x.factor = my_sample$color, group = my_sample$antennae,
response = my_sample$food1, ci.fun = ciMean, ylim = c(60, 10), legend = T)
bargraph.CI(x.factor = my_sample$color, group = my_sample$antennae,
response = my_sample$food1, ci.fun = ciMean, ylim = c(10, 50), legend = T)
bargraph.CI(x.factor = my_sample$color, group = my_sample$antennae,
response = my_sample$food1, ci.fun = ciMean, ylim = c(0, 50), legend = T)
bargraph.CI(x.factor = my_sample$color, group = my_sample$antennae,
response = my_sample$food1, ci.fun = ciMean, ylim = c(0, 20), legend = T)
sci.anova <- aov(my_sample$food1 ~ my_sample$color*my_sample$antennae) summary(sci.anova)
library(sciplot)
library(lsr)
sci.anova <- aov(my_sample$food1 ~ my_sample$color*my_sample$antennae) summary(sci.anova)
sci.anova <- aov(my_sample$food1 ~ my_sample$color*my_sample$antennae) summary(sci.anova)
sci.anova <- aov(my_sample$food1 ~ my_sample$color*my_sample$antennae)
summary(sci.anova)
bargraph.CI(x.factor = my_sample$color, group = my_sample$anxiety,
response = my_sample$food1, ci.fun = ciMean, ylim = c(0, 20), legend = T)
bargraph.CI(x.factor = my_sample$color, group = my_sample$politics,
response = my_sample$food1, ci.fun = ciMean, ylim = c(0, 20), legend = T)
sci.anova <- aov(my_sample$food1 ~ my_sample$color*my_sample$politics)
summary(sci.anova)
my_sample <- suppressWarnings(make.my.sample(32669094, 200, aliens))
bargraph.CI(x.factor = my_sample$island, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 150), legend = T)
bargraph.CI(x.factor = my_sample$college, response = my_sample$intelligence,
ci.fun = ciMean, ylim = c(0, 150), legend = T)
cp.anova <- aov(my_sample$intelligence ~ my_sample$island)
summary(cp.anova)
cp.anova <- aov(my_sample$intelligence ~ my_sample$college)
summary(cp.anova)
bargraph.CI(x.factor = my_sample$color, group = my_sample$antennae,
response = my_sample$food1, ci.fun = ciMean, ylim = c(0, 20), legend = T)
sci.anova <- aov(my_sample$food1 ~ my_sample$color*my_sample$antennae)
summary(sci.anova)
bargraph.CI(x.factor = my_sample$color, group = my_sample$politics,
response = my_sample$food1, ci.fun = ciMean, ylim = c(0, 20), legend = T)
sci.anova <- aov(my_sample$food1 ~ my_sample$color*my_sample$politics)
summary(sci.anova)
bargraph.CI(x.factor = my_sample$color, group = my_sample$politics,
response = my_sample$food1, ci.fun = ciMean, ylim = c(0, 20), legend = T)
sci.anova <- aov(my_sample$food1 ~ my_sample$color*my_sample$politics)
summary(sci.anova)
knitr::opts_chunk$set(echo = TRUE)
plot(my_sample$anxiety, my_sample$depression) cor(my_sample$anxiety, my_sample$depression)
plot(my_sample$anxiety, my_sample$depression)
cor(my_sample$anxiety, my_sample$depression)
regress.1 <- lm(my_sample$depression~my_sample$anxiety)
summary(regress.1)
plot(my_sample$anxiety, my_sample$depression)
abline(regress.1)
sd(my_sample$anxiety)
sd(my_sample$depression)
sd(my_sample$depression)/sd(my_sample$anxiety)
(sd(my_sample$depression)/sd(my_sample$anxiety))*0.6743446
my_sample <- suppressWarnings(make.my.sample(32669094, 100, aliens))
plot(my_sample$anxiety, my_sample$depression)
cor(my_sample$anxiety, my_sample$depression)
regress.1 <- lm(my_sample$depression~my_sample$anxiety)
summary(regress.1)
plot(my_sample$anxiety, my_sample$depression)
abline(regress.1)
(sd(my_sample$depression)/sd(my_sample$anxiety))*0.6294322
mean(my_sample$depression) - 1.091702(mean(my_sample$anxiety))
mean(my_sample$depression)
mean(my_sample$depression)
mean(my_sample$anxiety)
mean(my_sample$depression)
mean(my_sample$anxiety)*1.091702
mean(my_sample$depression)
mean(my_sample$anxiety)*1.091702
100.99-55.80781
mean(my_sample$depression)
mean(my_sample$anxiety)*1.091702
100.99-55.80781
45.18219 + (1.091702*60)
regress.1.residuals <- resid(regress.1)
regress.1.residuals
var(regress.1.residuals)
regress.1 <- lm(my_sample$depression~my_sample$anxiety)
summary(regress.1)
plot(my_sample$anxiety, my_sample$depression)
abline(regress.1)
plot(my_sample$anxiety, my_sample$sociable)
cor(my_sample$anxiety, my_sample$sociable)
regress.1 <- lm(my_sample$sociable~my_sample$anxiety)
summary(regress.1)
plot(my_sample$anxiety, my_sample$sociable)
abline(regress.1)
plot(my_sample$depression, my_sample$sociable)
cor(my_sample$depression, my_sample$sociable)
plot(my_sample$sociable, my_sample$depression)
cor(my_sample$sociable, my_sample$depression)
var(regress.1.residuals)
var(regress.1.residuals)/var(my_sample$depression)
var(regress.1.residuals)
var(regress.1.residuals)/var(my_sample$depression)
1 - .3962
my_sample_new <- my_sample
my_sample_new[100,9:10] <- c(20, 140)
my_sample_new <- my_sample
my_sample_new[100,9:10] <- c(20, 140)
plot(my_sample_new$anxiety, my_sample_new$depression)
cor(my_sample_new$anxiety, my_sample_new$depression)
regress.1 <- lm(my_sample_new$depression~my_sample_new$anxiety)
summary(regress.1)
plot(my_sample_new$anxiety, my_sample_new$depression)
abline(regress.1)
View(aliens)
#### Examples of code for Stroop Worksheet 1 in Psych 241 Methods ###
# To run a line of code, place the cursor on a line and press Ctrl + Enter (or command + Enter on a Mac) or click the Run button above
# To run multiple lines of code, select desired lines and press Ctrl + Enter (or command + Enter on a Mac) or click the Run button above
# First, we need to install the appropriate packages for these analyses using the install.packages() and library() code below
# If you used these before they should be available under the Packages tab (lower right) and you can load them with the check boxes.
install.packages("lsr")
install.packages("psych")
install.packages("tidyverse")
install.packages("tidyr")
library(lsr)
library(psych)
library(tidyverse)
library(sciplot) #for the plotting functions
library(tidyr) #for changing the data format from wide to long
####  Getting to know the data (checking and cleaning)  ####
# There shouldn't be any unusual values as we cleaned the data already, if needed.
# Now we need to find and read in the CSV file with the raw data.
# We will store it as "Stroop" by using <- to assign data to a dataset
# Please run the following code and find your saved CSV file to open:
Stroop <- read.csv(file.choose(), header = T)
head(Stroop) #will display header info to identify variables
View(Stroop) #will open a spreadsheet for the Stroop dataset in R
#These are examples of code that can be used below but need to match your dataset and variable name(s)
#table(dataset$variable)
#describe(dataset$variable)
## Participants section ##
table(dataset$variable) #modify this function to reflect the dataset and variable you are working with
table(Stroop$Section)
## Summarize the data ##
describe(dataset$variable) #copy and modify this function repeatedly to summarize the data for each condition
describe(Stroop$Missing)
describe(Stroop$NoLabels)
describe(Stroop$Incongruent)
describe(Stroop$Mixed)
###########################################################################
## Reorganize the dataset from wide to long format for plotting purposes ##
# Use code like this to reorganize the dataset for plotting graphs
Stroop_long <- gather(Stroop, Condition, RT, NoLabels:Mixed, factor_key=TRUE)
head(Stroop_long)
# What you just did was combine the different stimuli conditions together into one
# column/variable labeled "Condition", and combine all of the respective reaction
# times for those conditions into a different column/variable labeled "RT".
# We stored these new, combined data columns in a new dataset called Stroop_long
# with the same data as Stroop, but a different format that allows for plotting.
# Check that this worked properly by running:
View(Stroop_long)
#Use this code to plot the four conditions in a bar graph
bargraph.CI(x.factor = Stroop_long$Condition,
response = Stroop_long$RT,
ci.fun = ciMean, ylim = c(0, 40),
xlab = "Conditions", ylab = "Time to Completion (seconds)")
#Adjust the scale of the Y axis to emphasize the effects for these conditions
bargraph.CI(x.factor = Stroop_long$Condition,
response = Stroop_long$RT,
ci.fun = ciMean, ylim = c(20, 40),
xlab = "Conditions", ylab = "Time to Completion (seconds)")
# Click on "Export" right above the plot, select "Copy to Clipboard", paste it on your
# worksheet, and be sure to carefully read the prompt at the beginning of the page
# following your pasted plot.
# Be sure to save this script and include it with your Worksheet 1 submission.
## R Markdown
Stroop <- read.csv(file.choose(), header = T)
Stroop <- read.csv(file.choose(), header = T)
Stroop <- read.csv(file.choose(), header = T)
Stroop <- read.csv(file.choose(), header = T)
describe(Stroop$Missing)
describe(Stroop$NoLabels)
describe(Stroop$Incongruent)
describe(Stroop$Mixed)
Wellbeing <- read.csv(file.choose(), header = T)
View(Wellbeing)
Wellbeing <- read.csv(file.choose(), header = T)
head(Wellbeing)
